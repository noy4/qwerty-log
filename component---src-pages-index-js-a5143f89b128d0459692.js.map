{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["useStaticQuery","site","siteMetadata","author","className","href","target","rel","data","location","siteTitle","title","posts","allMarkdownRemark","nodes","isRoot","Link","to","map","post","slug","fields","frontmatter","key","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"oMAgDA,EAtCY,WAAO,IAAD,EAkBJ,WAjBCA,oBAAe,cAiBRC,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,iDACb,oDACyB,IACvB,qBACEC,KAAK,kCACLD,UAAU,oDACVE,OAAO,SACPC,IAAI,uBAJN,UAFF,O,6BC4BN,EArDkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKP,KAAKC,oBAAV,eAAwBS,QAAxB,QACZC,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,YAAYI,QAAM,IAC7B,uBAAKX,UAAU,4EACb,sBAAIA,UAAU,mCACZ,gBAAC,EAAAY,KAAD,CAAMC,GAAG,KAAKP,EAAd,MAEF,gBAAC,EAAD,OAGF,0BACGE,EAAMM,KAAI,SAAAC,GACT,IAAQC,EAASD,EAAKE,OAAdD,KACFT,EAAQQ,EAAKG,YAAYX,OAASS,EAExC,OACE,sBAAIG,IAAKH,GACP,2BACEhB,UAAU,iBACVoB,WAAS,EACTC,SAAS,6BAET,0BAAQrB,UAAU,QAChB,0BACE,gBAAC,EAAAY,KAAD,CAAMC,GAAIG,EAAMM,SAAS,OACvB,wBAAMA,SAAS,WAAWtB,UAAU,mBACjCO,KAIP,gBAAC,IAAD,CAASQ,KAAMA,KAEjB,+BACE,qBACEQ,wBAAyB,CACvBC,OAAQT,EAAKG,YAAYO,aAAeV,EAAKW,SAE/CJ,SAAS","file":"component---src-pages-index-js-a5143f89b128d0459692.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"text-center md:text-left text-lg mt-5 md:pl-8\">\n      <div>\n        A tech blog written by{\" \"}\n        <a\n          href=\"https://twitter.com/noy_qwerty/\"\n          className=\"hover:text-red-500 duration-200 transition-colors\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Qwerty\n        </a>\n        .\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TagList from \"../components/tag-list\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" isRoot />\n      <div className=\"flex-col sm:flex-row flex items-center sm:justify-between mb-16 sm:mb-12\">\n        <h1 className=\"main-heading sm:w-48 text-black\">\n          <Link to=\"/\">{siteTitle}.</Link>\n        </h1>\n        <Bio />\n      </div>\n\n      <ol>\n        {posts.map(post => {\n          const { slug } = post.fields\n          const title = post.frontmatter.title || slug\n\n          return (\n            <li key={slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header className=\"mb-2\">\n                  <h2>\n                    <Link to={slug} itemProp=\"url\">\n                      <span itemProp=\"headline\" className=\"hover:underline\">\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                  <TagList post={post} />\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true, pruneLength: 80)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true, locale: \"ja\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}