{"version":3,"sources":["webpack://qwerty-log/./src/templates/tags.js"],"names":["pageContext","data","location","tag","allMarkdownRemark","posts","nodes","tagHeader","totalCount","title","className","map","post","slug","fields","frontmatter","key","itemScope","itemType","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"yKAuDA,UAhDa,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IACR,EAAqCF,EAAKG,kBAA3BC,EAAf,EAAQC,MACFC,EAAS,IAAOJ,EAAP,YADf,EAAsBK,WACP,IAEf,OACE,gBAAC,IAAD,CAAQN,SAAUA,GAChB,gBAAC,IAAD,CAAKO,MAAK,IAAMN,EAAN,aACV,sBAAIO,UAAU,QAAQH,GACtB,0BACGF,EAAMM,KAAI,SAAAC,GACT,IAAQC,EAASD,EAAKE,OAAdD,KACAJ,EAAUG,EAAKG,YAAfN,MAER,OACE,sBAAIO,IAAKH,GACP,2BACEH,UAAU,iBACVO,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAMQ,SAAS,OACvB,wBAAMA,SAAS,WAAWX,UAAU,mBACjCD,KAIP,gBAAC,IAAD,CAASG,KAAMA,KAEjB,+BACE,qBACEU,wBAAyB,CACvBC,OAAQX,EAAKG,YAAYS,aAAeZ,EAAKa,SAE/CJ,SAAS","file":"component---src-templates-tags-js-e154788161196ab44644.js","sourcesContent":["// Components\nimport { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TagList from \"../components/tag-list\"\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { nodes: posts, totalCount } = data.allMarkdownRemark\n  const tagHeader = `\"${tag}\" に関する投稿（${totalCount}）`\n\n  return (\n    <Layout location={location}>\n      <Seo title={`\"${tag}\" に関する投稿`} />\n      <h1 className=\"mt-0\">{tagHeader}</h1>\n      <ul>\n        {posts.map(post => {\n          const { slug } = post.fields\n          const { title } = post.frontmatter\n\n          return (\n            <li key={slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={slug} itemProp=\"url\">\n                      <span itemProp=\"headline\" className=\"hover:underline\">\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                  <TagList post={post} />\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}